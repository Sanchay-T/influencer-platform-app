---
description:
globs:
alwaysApply: false
---
# Core Guidelines – Influencer Platform

The project uses **Next.js 15 (App Router)**, **React 18**, **TypeScript**, **Tailwind**, **Radix UI**, **Drizzle ORM**, **Supabase Postgres**, **Upstash QStash**, and **Apify**.

## General Principles
- Prefer **React Server Components**; mark client-side components explicitly with `"use client"`.
- Keep functions and components **small, pure, and typed**. Use named exports.
- Use **TypeScript** everywhere; avoid `any`. Prefer `interface` over `type` unless utility types.
- Leverage **Drizzle ORM** for all DB access. Never embed raw SQL strings in UI code.
- Queue any task expected to run >1 s via **QStash**, and process inside `/api/qstash/*` routes.
- Write idempotent API handlers – they may be retried by QStash.
- Use **.env.local** for secrets; never commit secrets.
- Maintain **atomic commits** and write descriptive commit messages following Conventional Commits.

## Folder Conventions
```
app/          # UI & API routes
lib/          # Pure logic, DB, utilities – UI-free
public/       # Static assets served directly
.cursor/rules # Cursor MDC rules (this folder)
```

## Naming
- Directories: `kebab-case`.
- Variables/props: `camelCase`; booleans prefixed with `is/has/should`.
- Components: `PascalCase`.

## Testing & Quality
- All new logic requires unit tests (Jest + React Testing Library when UI).
- Run `npm run lint` and ensure zero ESLint errors before commit.

## Example References
@/project_overview.md
